/*Дано дві коробки у формі прямокутних паралелепіпедів. Вони, можливо, зможуть (а можливо й ні — це якраз і просять з’ясувати) 
поміститися менша у більшу. Причому, їх дозволено крутити, але лише на кути, кратні 90 ̊. Наприклад, 30×10×20 може поміститись у 25×27×33,
якщо другу повернути так, щоб вона стала 33×27×25, після чого можна порівняти 30×10×20 і 33×27×25 як «30<33, 10<27, 20<25 —
значить, поміщається». Вимога «лише на кути, кратні 90 ̊» важлива, наприклад, для коробок 1×1×120 і 100×100×100: якщо класти
тонку довгу коробку 1×1×120, і навіть 1×1×150, можна вкласти у коробку 100×100×100, але в цій задачі вважаємо, що ні 1×1×120,
ні навіть 1×1×100 (див. далі) вже не поміщається у 100×100×100.) Стінки коробок слід вважати тонкими, але
ненульової товщини. Наприклад, слід вважати, що коробка 100000×99999×50000 може поміститися в коробку 100001×100000×50002, 
але ніяка коробка не може поміститися в рівно таку саму, і саме з цієї причини також 1×1×100 не поміщається у 100×100×100. 
Напишіть програму, яка, прочитавши в одному рядку три додатні цілі числа, що є розмірами першої коробки, і в наступному 
рядку 3 додатні цілі числа, що є розмірами другої коробки,  виведе одну з трьох відповідей: або «перша коробка поміщається у другу», 
або «друга коробка поміщається у першу», або «жодна з коробок не поміщається в іншу», без подальших пояснень у виведенні програми 
(але такі пояснення може питати викладач при захисті). Вважати, що максимальне спрощення виразів, якими приймається 
остаточне рішення, настільки важливе, що заради цього спрощення варто провести сортування. Яке сортування і до чого воно 
тут взагалі, слід придумати. Не знаєте, навіщо тут сортування — ну, значить, не розв’язали цю задачу. 
Водночас, як і в усіх інших варіантах, від сортування повинна бути користь, написати його «просто аби було» не вважається розв’язком.*/﻿
using System;
class Program
{
    static void Main()
    {
        Console.Write("Введiть довжину, ширину i висоту коробки 1: ");
        string[] input = Console.ReadLine().Split();
        int[] box1 = new int[3];
        for (int i = 0; i < 3; i++)
        {
            box1[i] = int.Parse(input[i]);
        }

        Console.Write("Введiть довжину, ширину i висоту коробки 2: ");
        string[] twodate = Console.ReadLine().Split();
        int[] box2 = new int[3];
        for (int i = 0; i < 3; i++)
        {
            box2[i] = int.Parse(twodate[i]);
        }

        perevirka(box1, box2);
    }
    static void sort(ref int[] numbers)
    {
        for (int i = 0; i < numbers.Length; i++)
        {
            for (int j = 0; j < numbers.Length - 1; j++)
            {
                if (numbers[j] > numbers[j + 1])
                {
                    int temp = numbers[j];
                    numbers[j] = numbers[j + 1];
                    numbers[j + 1] = temp;
                }
            }
        }
    }
    static void perevirka(int[] box1, int[] box2)
    {
        sort(ref box1);
        sort(ref box2);

        if (box1[0] < box2[0] && box1[1] < box2[1] && box1[2] < box2[2])
        {
            Console.WriteLine("Перша коробка помiщається у другу");
        }
        else if (box2[0] < box1[0] && box2[1] < box1[1] && box2[2] < box1[2])
        {
            Console.WriteLine("Друга коробка помiщається у першу");
        }
        else
        {
            Console.WriteLine("Жодна з коробок не помiщається в iншу");
        }
    }
}
